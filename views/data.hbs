<div class="row justify-content-center">
  <div class="card text-center" style="width: 18rem;">
    <img class="card-img-top" src="https://images-na.ssl-images-amazon.com/images/I/816vyeuuKzL._SY355_.jpg" alt="Card image cap">
    <div class="card-body">
      <h5 class="card-title">Skippy Creamy Peanut Butter</h5>
      <p class="card-text">$3.99</p>
      <a href="" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
</div>
<script>
  function initMap(
    warehouse = '1355 Market St #900, San Francisco, CA 94103',
    destinationCar = '1355 Market St #900, San Francisco, CA 94103',
    destinationHouse = '200 Larkin St, San Francisco, CA 94102'
  ) {
    // //Implement how to grab the addresses and turn regular addresses into coorinates
    // var warehouse = '1355 Market St #900, San Francisco, CA 94103'; //37.776801, -122.416618 Twitter HeadQuarters
    // var destinationCar = '1355 Market St #900, San Francisco, CA 94103'; //37.788759, -122.411561 HackBright Car
    // var destinationHouse = '200 Larkin St, San Francisco, CA 94102'; //'600 Montgomery St, San Francisco, CA 94111';//(37.794542, -122.407827) Transamerica Pyramid

    var service = new google.maps.DistanceMatrixService();
    service.getDistanceMatrix(
      {
        origins: [warehouse],
        destinations: [destinationCar, destinationHouse],
        travelMode: 'DRIVING',
        //transitOptions: TransitOptions,
        //drivingOptions: DrivingOptions,
        unitSystem: google.maps.UnitSystem.METRIC,
        avoidHighways: false,
        avoidTolls: false
      },
      callback
    );

    function callback(response, status) {
      let shortDist = 10000000;
      let o;
      let d;

      if (status == 'OK') {
        var origins = response.originAddresses;
        var destinations = response.destinationAddresses;

        for (var i = 0; i < origins.length; i++) {
          var results = response.rows[i].elements;

          for (var j = 0; j < results.length; j++) {
            if (results[j].distance.value < shortDist) {
              shortDist = results[j].distance.value;
              o = origins[i];
              d = destinations[j];
            }

            var element = results[j];
            var distance = element.distance.text;
            var duration = element.duration.text;
            var from = origins[i];
            var to = destinations[j];

            console.log(
              from + ' to ' + to + ': ' + distance + ' in ' + duration + '<br>'
            );
          }
        }
        console.log(
          'Shortest distance is: ' +
          shortDist +
          ' from ' +
          o +
          ' to ' +
          d +
          '<br>'
        ); //found which is faster

        if (d == destinations[0]) return 'car';
        //RETURN WHATEVER INSTEAD
        else return 'house';
      } //Find out how to return
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnC8jPdJ8TBmCe2XjFtJ_pVwHB826r2YU&callback=initMap"></script>